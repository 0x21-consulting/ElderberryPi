---

- name: Authenticate with vault
  command:
    cmd: zkdecrypt -i /etc/vault/root.token -o ~/.vault-token
    creates: ~/.vault-token

- name: Determine whether a Root CA exists
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault secrets list -format=json
  register: vault_secrets_list
  changed_when: false

- set_fact:
    output: "{{ vault_secrets_list.stdout | from_json }}"

- name: Enable pki secrets engine at pki endpoint for Root CA
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault secrets enable -description="Root CA" pki
  when: output['pki/'] is not defined

- name: Set certificate maximum TTL to 10 years for Root CA
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault secrets tune -max-lease-ttl=87600h pki
  when: output['pki/'] is not defined

- name: Generate root certificate
  shell: 
    cmd: VAULT_ADDR=http://127.0.0.1:8200 vault write -field=certificate pki/root/generate/internal common_name="{{domain}}" ttl=87600h > /etc/vault/CA_cert.crt
    creates: /etc/vault/CA_cert.crt
  when: output['pki/'] is not defined

- name: Configure CA and Certificate Revocation List URLs
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault write pki/config/urls issuing_certificates="http://127.0.0.1:8200/v1/pki/ca" crl_distribution_points="http://127.0.0.1:8200/v1/pki/crl"
  when: output['pki/'] is not defined

- name: Enable pki secrets engine at pki_int endpoint for Intermediate CA
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault secrets enable -path=pki_int -description="Intermediate CA" pki
  when: output['pki_int/'] is not defined

- name: Set certificate maximum TTL to 5 years for Intermediate CA
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault secrets tune -max-lease-ttl=43800h pki_int
  when: output['pki_int/'] is not defined

- name: Generate Intermediate CA and Certificate Signing Request
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault write -format=json pki_int/intermediate/generate/internal common_name="{{ domain }} Intermediate Authority"
  when: output['pki_int/'] is not defined
  register: vault_csr_out

- set_fact:
    vault_csr: "{{ vault_csr_out.stdout | from_json }}"
  when: output['pki_int/'] is not defined

- name: Sign Intermediate CA cert with Root CA
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault write -format=json pki/root/sign-intermediate csr="{{vault_csr.data.csr}}" format=pem_bundle ttl="43800h"
  register: vault_int_cert
  when: output['pki_int/'] is not defined

- set_fact:
    vault_cert: "{{ vault_int_cert.stdout | from_json }}"
  when: output['pki_int/'] is not defined

- name: Import signed certificate into Intermediate CA
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault write pki_int/intermediate/set-signed certificate="{{vault_cert.data.certificate}}"
  when: output['pki_int/'] is not defined

- name: Create policy for {{domain}} to allow certificate issuance
  shell: VAULT_ADDR=http://127.0.0.1:8200 vault write pki_int/roles/{{ domain | regex_replace('\\.', '-') }} allowed_domains={{domain}} allow_subdomains=true max_ttl=72h
  when: output['pki_int/'] is not defined

- name: De-authenticate with Vault
  file:
    path: ~/.vault-token
    state: absent

- name: Ensure Root CA certificate is trusted system-wide
  copy:
    src: /etc/vault/CA_cert.crt
    dest: /usr/local/share/ca-certificates/CA_cert.crt
    remote_src: true
  register: trust_store

- name: Refresh CA trust store
  command: update-ca-certificates --fresh
  when: trust_store.changed
